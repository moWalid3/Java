


public void quickSort() {
    recQuickSort(0,size-1);
}
public void recQuickSort(int left, int right){

    if( right - left <= 0) return;
    else{
            int pivot = arr[right];
            int partition = partitionIt(left , right,pivot);
            recQuickSort(left, partition - 1);
            recQuickSort(partition +1 , right);
    }
}
public int partitionIt(int left , int right ,int pivot){

    int leftPtr = left -1;
    int rightPtr = right;

    while(true){
        while( arr[++leftPtr] < pivot ) ;
        while( rightPtr > 0 && arr[--rightPtr ] > pivot);

        if  ( leftPtr > = rightPtr) break;
        else swap(left,right);
    }
    swap(leftPtr,right);
    return leftPtr;
}
public void swap(int x,int y){
    int temp = arr[x];
    arr[x] = arr[y];
    arr[y] = temp;
}











